<?php

declare(strict_types=1);

namespace App\Core\Providers;

use App\Core\Repositories\Admin\AdminRepository;
use App\Core\Repositories\Admin\AdminRepositoryInterface;
use App\Core\Repositories\UserRepository;
use App\Core\Repositories\UserRepositoryInterface;
use App\Core\Repositories\Site\SiteRepository;
use App\Core\Repositories\Site\SiteRepositoryInterface;
use App\Core\Repositories\Post\CommentRepository;
use App\Core\Repositories\Post\CommentRepositoryInterface;
use App\Core\Repositories\Product\CategoryRepository;
use App\Core\Repositories\Product\CategoryRepositoryInterface;
use App\Core\Repositories\Geoip\CountryRepository;
use App\Core\Repositories\Geoip\CountryRepositoryInterface;
// use App\Core\Repositories\Cart\CouponRepository;
// use App\Core\Repositories\Cart\CouponRepositoryInterface;
use App\Core\Repositories\Localisation\CurrencyRepository;
use App\Core\Repositories\Localisation\CurrencyRepositoryInterface;
use App\Core\Repositories\Localisation\LanguageRepository;
use App\Core\Repositories\Localisation\LanguageRepositoryInterface;
use App\Core\Repositories\User\DigitalAssetLogRepository;
use App\Core\Repositories\User\DigitalAssetLogRepositoryInterface;
use App\Core\Repositories\Fields\FieldRepository;
use App\Core\Repositories\Fields\FieldRepositoryInterface;
use App\Core\Repositories\Product\LengthTypeRepository;
use App\Core\Repositories\Product\LengthTypeRepositoryInterface;
use App\Core\Repositories\Product\ManufacturerRepository;
use App\Core\Repositories\Product\ManufacturerRepositoryInterface;
use App\Core\Repositories\PostCategory\TaxonomyItemRepository;
use App\Core\Repositories\PostCategory\TaxonomyItemRepositoryInterface;
use App\Core\Repositories\PostCategory\TaxonomyRepository;
use App\Core\Repositories\PostCategory\TaxonomyRepositoryInterface;
use App\Core\Repositories\User\UserAddressRepository;
use App\Core\Repositories\User\UserAddressRepositoryInterface;
use App\Core\Repositories\Media\MediaContentRepository;
use App\Core\Repositories\Media\MediaContentRepositoryInterface;
use App\Core\Repositories\Menu\MenuRepository;
use App\Core\Repositories\Menu\MenuRepositoryInterface;
use App\Core\Repositories\Option\OptionRepository;
use App\Core\Repositories\Option\OptionRepositoryInterface;
use App\Core\Repositories\Order\OrderRepository;
use App\Core\Repositories\Order\OrderRepositoryInterface;
use App\Core\Repositories\Order\OrderLogRepository;
use App\Core\Repositories\Order\OrderLogRepositoryInterface;
use App\Core\Repositories\Order\OrderStatusRepository;
use App\Core\Repositories\Order\OrderStatusRepositoryInterface;
use App\Core\Repositories\Order\PaymentStatusRepository;
use App\Core\Repositories\Order\PaymentStatusRepositoryInterface;
use App\Core\Repositories\User\DigitalAssetRepositoryInterface;
use App\Core\Repositories\User\DigitalAssetRepository;
use App\Core\Repositories\Post\PostRepository;
use App\Core\Repositories\Post\PostRepositoryInterface;
use App\Core\Repositories\Post\PostContentMetaRepository;
use App\Core\Repositories\Post\PostContentMetaRepositoryInterface;
use App\Core\Repositories\Post\PostContentRevisionRepository;
use App\Core\Repositories\Post\PostContentRevisionRepositoryInterface;
use App\Core\Repositories\Post\PostMetaRepository;
use App\Core\Repositories\Post\PostMetaRepositoryInterface;
use App\Core\Repositories\Product\ProductRepository;
use App\Core\Repositories\Product\ProductRepositoryInterface;
use App\Core\Repositories\Product\ProductAttributeRepository;
use App\Core\Repositories\Product\ProductAttributeRepositoryInterface;
use App\Core\Repositories\Product\ProductContentMetaRepository;
use App\Core\Repositories\Product\ProductContentMetaRepositoryInterface;
use App\Core\Repositories\Product\ProductContentRevisionRepository;
use App\Core\Repositories\Product\ProductContentRevisionRepositoryInterface;
use App\Core\Repositories\Product\ProductMetaRepository;
use App\Core\Repositories\Product\ProductMetaRepositoryInterface;
use App\Core\Repositories\Product\ProductOptionRepository;
use App\Core\Repositories\Product\ProductOptionRepositoryInterface;
use App\Core\Repositories\Product\ProductOptionValueRepository;
use App\Core\Repositories\Product\ProductOptionValueRepositoryInterface;
use App\Core\Repositories\Product\ProductQuestionRepository;
use App\Core\Repositories\Product\ProductQuestionRepositoryInterface;
use App\Core\Repositories\Product\ProductReviewRepository;
use App\Core\Repositories\Product\ProductReviewRepositoryInterface;
use App\Core\Repositories\Product\ProductReviewMediaRepository;
use App\Core\Repositories\Product\ProductReviewMediaRepositoryInterface;
use App\Core\Repositories\Product\ProductSubscriptionRepository;
use App\Core\Repositories\Product\ProductSubscriptionRepositoryInterface;
use App\Core\Repositories\Geoip\RegionRepository;
use App\Core\Repositories\Geoip\RegionRepositoryInterface;
use App\Core\Repositories\Geoip\RegionGroupRepository;
use App\Core\Repositories\Geoip\RegionGroupRepositoryInterface;
use App\Core\Repositories\Order\ReturnRepository;
use App\Core\Repositories\Order\ReturnRepositoryInterface;
use App\Core\Repositories\Order\ReturnReasonRepository;
use App\Core\Repositories\Order\ReturnReasonRepositoryInterface;
use App\Core\Repositories\Order\ReturnResolutionRepository;
use App\Core\Repositories\Order\ReturnResolutionRepositoryInterface;
use App\Core\Repositories\Order\ReturnStatusRepository;
use App\Core\Repositories\Order\ReturnStatusRepositoryInterface;
use App\Core\Repositories\Role\RoleRepository;
use App\Core\Repositories\Role\RoleRepositoryInterface;
use App\Core\Repositories\Site\SettingRepository;
use App\Core\Repositories\Site\SettingRepositoryInterface;
use App\Core\Repositories\Site\SettingContentRepository;
use App\Core\Repositories\Site\SettingContentRepositoryInterface;
use App\Core\Repositories\Order\ShippingStatusRepository;
use App\Core\Repositories\Order\ShippingStatusRepositoryInterface;
use App\Core\Repositories\Product\StockStatusRepository;
use App\Core\Repositories\Product\StockStatusRepositoryInterface;
use App\Core\Repositories\Subscription\SubscriptionRepository;
use App\Core\Repositories\Subscription\SubscriptionRepositoryInterface;
use App\Core\Repositories\Subscription\SubscriptionStatusRepository;
use App\Core\Repositories\Subscription\SubscriptionStatusRepositoryInterface;
use App\Core\Repositories\User\UserFailedLoginRepository;
use App\Core\Repositories\User\UserFailedLoginRepositoryInterface;
use App\Core\Repositories\User\UserGroupRepository;
use App\Core\Repositories\User\UserGroupRepositoryInterface;
use App\Core\Repositories\User\UserWishlistRepository;
use App\Core\Repositories\User\UserWishlistRepositoryInterface;
use App\Core\Repositories\Product\VendorRepository;
use App\Core\Repositories\Product\VendorRepositoryInterface;
use App\Core\Repositories\Tax\TaxTypeRepository;
use App\Core\Repositories\Tax\TaxTypeRepositoryInterface;
use App\Core\Repositories\Fields\FieldGroupRepository;
use App\Core\Repositories\Fields\FieldGroupRepositoryInterface;
use App\Core\Repositories\Media\MediaRepository;
use App\Core\Repositories\Media\MediaRepositoryInterface;
use App\Core\Repositories\Subscription\SubscriptionPlanRepository;
use App\Core\Repositories\Subscription\SubscriptionPlanRepositoryInterface;
use App\Core\Repositories\Subscription\SubscriptionPlanContentRepository;
use App\Core\Repositories\Subscription\SubscriptionPlanContentRepositoryInterface;
use App\Core\Repositories\Tax\TaxRateRepository;
use App\Core\Repositories\Tax\TaxRateRepositoryInterface;
use App\Core\Repositories\Checkout\VoucherRepository;
use App\Core\Repositories\Checkout\VoucherRepositoryInterface;
use App\Core\Repositories\Product\WeightTypeRepository;
use App\Core\Repositories\Product\WeightTypeRepositoryInterface;
use App\Core\Repositories\Tax\TaxRuleRepository;
use App\Core\Repositories\Tax\TaxRuleRepositoryInterface;
use App\Core\Repositories\Product\LengthTypeContentRepository;
use App\Core\Repositories\Product\LengthTypeContentRepositoryInterface;
use App\Core\Repositories\Post\PostTypeRepository;
use App\Core\Repositories\Post\PostTypeRepositoryInterface;
use App\Core\Repositories\Product\ProductTypeRepository;
use App\Core\Repositories\Product\ProductTypeRepositoryInterface;
use App\Core\Repositories\Admin\AdminRoleRepository;
use App\Core\Repositories\Admin\AdminRoleRepositoryInterface;
use App\Core\Repositories\Plugin\PluginRepository;
use App\Core\Repositories\Plugin\PluginRepositoryInterface;
use App\Core\Repositories\Post\PostTagRepository;
use App\Core\Repositories\Post\PostTagRepositoryInterface;
use App\Core\Repositories\Design\DesignResourceRepository;
use App\Core\Repositories\Design\DesignResourceRepositoryInterface;
use App\Core\Repositories\NeedHelp\NeedHelpRepository;
use App\Core\Repositories\NeedHelp\NeedHelpRepositoryInterface;

use App\Core\Repositories\Component\ComponentRepository;
use App\Core\Repositories\Component\ComponentRepositoryInterface;
use App\Core\Repositories\Component\ComponentItemRepository;
use App\Core\Repositories\Component\ComponentItemRepositoryInterface;
use App\Core\Repositories\Project\ProjectRepository;
use App\Core\Repositories\Project\ProjectRepositoryInterface;
use App\Core\Repositories\Post\PostBlogSliderRepository;
use App\Core\Repositories\Post\PostBlogSliderRepositoryInterface;
use App\Core\Repositories\Model\ModelRepository;
use App\Core\Repositories\Model\ModelRepositoryInterface;
use App\Core\Repositories\Type\TypeRepository;
use App\Core\Repositories\Type\TypeRepositoryInterface;
use App\Core\Repositories\Project\ProjectStatusRepository;
use App\Core\Repositories\Project\ProjectStatusRepositoryInterface;
use App\Core\Repositories\Post\PostStatusRepository;
use App\Core\Repositories\Post\PostStatusRepositoryInterface;
use App\Core\Repositories\Quote\QuoteRepository;
use App\Core\Repositories\Quote\QuoteRepositoryInterface;
use App\Core\Repositories\Page\PageRepository;
use App\Core\Repositories\Page\PageRepositoryInterface;
use App\Core\Repositories\Page\PageStatusRepository;
use App\Core\Repositories\Page\PageStatusRepositoryInterface;
use App\Core\Repositories\Quote\QuoteItemRepository;
use App\Core\Repositories\Quote\QuoteItemRepositoryInterface;
use App\Core\Repositories\Order\OrderItemRepository;
use App\Core\Repositories\Order\OrderItemRepositoryInterface;
use App\Core\Repositories\Job\JobRepository;
use App\Core\Repositories\Job\JobRepositoryInterface;
use App\Core\Repositories\Role\ModelHasRoleRepository;
use App\Core\Repositories\Role\ModelHasRoleRepositoryInterface;
use App\Core\Repositories\Coupon\CouponRepository;
use App\Core\Repositories\Coupon\CouponRepositoryInterface;
use App\Core\Repositories\Coupon\CouponProductRepository;
use App\Core\Repositories\Coupon\CouponProductRepositoryInterface;
use App\Core\Repositories\Pinboard\PinboardRepository;
use App\Core\Repositories\Pinboard\PinboardRepositoryInterface;
use App\Core\Repositories\Pinboard\PinboardItemRepository;
use App\Core\Repositories\Pinboard\PinboardItemRepositoryInterface;
use App\Core\Repositories\Taxonomy\TaxonomyItemRepository as OriginalTaxonomyItemRepository;
use App\Core\Repositories\Taxonomy\TaxonomyItemRepositoryInterface as OriginalTaxonomyItemRepositoryInterface;

use App\Core\Routes\ApiRoute;
use App\Core\Routes\WebRoute;
use Illuminate\Container\Container;


class AppServiceProvider
{
    public function __construct(private Container $container)
    {
    }

    public function register(): void
    {
        // Bind the repositories
        $this->container->bind(UserRepositoryInterface::class, UserRepository::class);
        $this->container->bind(SiteRepositoryInterface::class, SiteRepository::class);
        $this->container->bind(SettingRepositoryInterface::class, SettingRepository::class);
        $this->container->bind(AdminRepositoryInterface::class, AdminRepository::class);
        $this->container->bind(CategoryRepositoryInterface::class, CategoryRepository::class);
        $this->container->bind(CommentRepositoryInterface::class, CommentRepository::class);
        $this->container->bind(CountryRepositoryInterface::class, CountryRepository::class);
        // $this->container->bind(CouponRepositoryInterface::class, CouponRepository::class);
        $this->container->bind(CurrencyRepositoryInterface::class, CurrencyRepository::class);
        $this->container->bind(LanguageRepositoryInterface::class, LanguageRepository::class);
        $this->container->bind(DigitalAssetRepositoryInterface::class, DigitalAssetRepository::class);
        $this->container->bind(DigitalAssetLogRepositoryInterface::class, DigitalAssetLogRepository::class);
        $this->container->bind(FieldRepositoryInterface::class, FieldRepository::class);
        $this->container->bind(LengthTypeRepositoryInterface::class, LengthTypeRepository::class);
        $this->container->bind(ManufacturerRepositoryInterface::class, ManufacturerRepository::class);
        $this->container->bind(TaxonomyItemRepositoryInterface::class, TaxonomyItemRepository::class);
        $this->container->bind(TaxonomyRepositoryInterface::class, TaxonomyRepository::class);
        $this->container->bind(UserAddressRepositoryInterface::class, UserAddressRepository::class);
        $this->container->bind(MediaContentRepositoryInterface::class, MediaContentRepository::class);
        $this->container->bind(MenuRepositoryInterface::class, MenuRepository::class);
        $this->container->bind(OptionRepositoryInterface::class, OptionRepository::class);
        $this->container->bind(OrderRepositoryInterface::class, OrderRepository::class);
        $this->container->bind(OrderLogRepositoryInterface::class, OrderLogRepository::class);
        $this->container->bind(OrderStatusRepositoryInterface::class, OrderStatusRepository::class);
        $this->container->bind(PaymentStatusRepositoryInterface::class, PaymentStatusRepository::class);
        $this->container->bind(PostContentMetaRepositoryInterface::class, PostContentMetaRepository::class);
        $this->container->bind(PostRepositoryInterface::class, PostRepository::class);
        $this->container->bind(PostContentRevisionRepositoryInterface::class, PostContentRevisionRepository::class);
        $this->container->bind(PostMetaRepositoryInterface::class, PostMetaRepository::class);
        $this->container->bind(ProductRepositoryInterface::class, ProductRepository::class);
        $this->container->bind(ProductAttributeRepositoryInterface::class, ProductAttributeRepository::class);
        $this->container->bind(ProductContentMetaRepositoryInterface::class, ProductContentMetaRepository::class);
        $this->container->bind(ProductContentRevisionRepositoryInterface::class, ProductContentRevisionRepository::class);
        $this->container->bind(ProductMetaRepositoryInterface::class, ProductMetaRepository::class);
        $this->container->bind(ProductOptionRepositoryInterface::class, ProductOptionRepository::class);
        $this->container->bind(ProductOptionValueRepositoryInterface::class, ProductOptionValueRepository::class);
        $this->container->bind(ProductQuestionRepositoryInterface::class, ProductQuestionRepository::class);
        $this->container->bind(ProductReviewRepositoryInterface::class, ProductReviewRepository::class);
        $this->container->bind(ProductReviewMediaRepositoryInterface::class, ProductReviewMediaRepository::class);
        $this->container->bind(ProductSubscriptionRepositoryInterface::class, ProductSubscriptionRepository::class);
        $this->container->bind(RegionRepositoryInterface::class, RegionRepository::class);
        $this->container->bind(RegionGroupRepositoryInterface::class, RegionGroupRepository::class);
        $this->container->bind(ReturnRepositoryInterface::class, ReturnRepository::class);
        $this->container->bind(ReturnReasonRepositoryInterface::class, ReturnReasonRepository::class);
        $this->container->bind(ReturnResolutionRepositoryInterface::class, ReturnResolutionRepository::class);
        $this->container->bind(ReturnStatusRepositoryInterface::class, ReturnStatusRepository::class);
        $this->container->bind(RoleRepositoryInterface::class, RoleRepository::class);
        $this->container->bind(SettingRepositoryInterface::class, SettingRepository::class);
        $this->container->bind(SettingContentRepositoryInterface::class, SettingContentRepository::class);
        $this->container->bind(ShippingStatusRepositoryInterface::class, ShippingStatusRepository::class);
        $this->container->bind(StockStatusRepositoryInterface::class, StockStatusRepository::class);
        $this->container->bind(SubscriptionRepositoryInterface::class, SubscriptionRepository::class);
        $this->container->bind(SubscriptionStatusRepositoryInterface::class, SubscriptionStatusRepository::class);
        $this->container->bind(UserFailedLoginRepositoryInterface::class, UserFailedLoginRepository::class);
        $this->container->bind(UserGroupRepositoryInterface::class, UserGroupRepository::class);
        $this->container->bind(UserWishlistRepositoryInterface::class, UserWishlistRepository::class);
        $this->container->bind(VendorRepositoryInterface::class, VendorRepository::class);
        $this->container->bind(TaxTypeRepositoryInterface::class, TaxTypeRepository::class);
        $this->container->bind(FieldGroupRepositoryInterface::class, FieldGroupRepository::class);
        $this->container->bind(MediaRepositoryInterface::class, MediaRepository::class);
        $this->container->bind(SubscriptionPlanRepositoryInterface::class, SubscriptionPlanRepository::class);
        $this->container->bind(SubscriptionPlanContentRepositoryInterface::class, SubscriptionPlanContentRepository::class);
        $this->container->bind(TaxRateRepositoryInterface::class, TaxRateRepository::class);
        $this->container->bind(VoucherRepositoryInterface::class, VoucherRepository::class);
        $this->container->bind(WeightTypeRepositoryInterface::class, WeightTypeRepository::class);
        $this->container->bind(TaxRuleRepositoryInterface::class, TaxRuleRepository::class);
        $this->container->bind(LengthTypeContentRepositoryInterface::class, LengthTypeContentRepository::class);
        $this->container->bind(PostTypeRepositoryInterface::class, PostTypeRepository::class);
        $this->container->bind(ProductTypeRepositoryInterface::class, ProductTypeRepository::class);
        $this->container->bind(AdminRoleRepositoryInterface::class, AdminRoleRepository::class);
        $this->container->bind(PluginRepositoryInterface::class, PluginRepository::class);
        $this->container->bind(PostTagRepositoryInterface::class, PostTagRepository::class);
        $this->container->bind(DesignResourceRepositoryInterface::class, DesignResourceRepository::class);
        $this->container->bind(ComponentRepositoryInterface::class, ComponentRepository::class);
        $this->container->bind(ComponentItemRepositoryInterface::class, ComponentItemRepository::class);
        $this->container->bind(ProjectRepositoryInterface::class, ProjectRepository::class);
        $this->container->bind(PostBlogSliderRepositoryInterface::class, PostBlogSliderRepository::class);
        $this->container->bind(ModelRepositoryInterface::class, ModelRepository::class);
        $this->container->bind(TypeRepositoryInterface::class, TypeRepository::class);
        $this->container->bind(ProjectStatusRepositoryInterface::class, ProjectStatusRepository::class);
        $this->container->bind(PostStatusRepositoryInterface::class, PostStatusRepository::class);
        $this->container->bind(QuoteRepositoryInterface::class, QuoteRepository::class);
        $this->container->bind(PageRepositoryInterface::class, PageRepository::class);
        $this->container->bind(PageStatusRepositoryInterface::class, PageStatusRepository::class);
        $this->container->bind(QuoteItemRepositoryInterface::class, QuoteItemRepository::class);
        $this->container->bind(OrderItemRepositoryInterface::class, OrderItemRepository::class);
        $this->container->bind(JobRepositoryInterface::class, JobRepository::class);
        $this->container->bind(ModelHasRoleRepositoryInterface::class, ModelHasRoleRepository::class);
        $this->container->bind(CouponRepositoryInterface::class, CouponRepository::class);
        $this->container->bind(CouponProductRepositoryInterface::class, CouponProductRepository::class);
        $this->container->bind(PinboardRepositoryInterface::class, PinboardRepository::class);
        $this->container->bind(PinboardItemRepositoryInterface::class, PinboardItemRepository::class);
        $this->container->bind(NeedHelpRepositoryInterface::class, NeedHelpRepository::class);
        $this->container->bind(OriginalTaxonomyItemRepositoryInterface::class, OriginalTaxonomyItemRepository::class);
        WebRoute::registerRoutes();
        ApiRoute::registerRoutes();
    }
}
